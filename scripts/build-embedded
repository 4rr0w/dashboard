#!/bin/bash
set -e
set -x

BUILD_DEBUG="${BUILD_DEBUG:-}"
if [[ -n "${BUILD_DEBUG}" ]]; then
    set -x
    env
fi

cd $(dirname $0)/..

echo "Bootstrapping..."
yarn --pure-lockfile install

source scripts/version
echo "BRANCH: ${COMMIT_BRANCH:-<none>}"
echo "TAG: ${GIT_TAG:-<none>}"
DIR=${GIT_TAG:-$COMMIT_BRANCH}

echo "RANCHER ENV: $RANCHER_ENV"
echo "BUILD AND EMBED PKG: $EMBED_PKG"

OUTPUT_DIR=dist/${DIR}-embedded

echo "Building..."
NUXT_ENV_commit=${COMMIT} NUXT_ENV_version=${VERSION} OUTPUT_DIR=$OUTPUT_DIR ROUTER_BASE='/dashboard' RANCHER_ENV=$RANCHER_ENV yarn run build --spa

# TODO: RC Test/confirm this is needed (see harv dev notes confluence)
if [ -v EMBED_PKG ]; then
    BASE_DIR="$( cd .. & pwd)"

    PKG_LOCATION=$BASE_DIR/pkg/$EMBED_PKG
    echo "Building Package $PKG_LOCATION..."
    PKG_VERSION=$(cd $PKG_LOCATION; node -p -e "require('./package.json').version")
    PKG_NAME=${EMBED_PKG}-${PKG_VERSION}
    yarn run build-pkg $EMBED_PKG
    mv dist-pkg/$PKG_NAME $OUTPUT_DIR
else
    echo "No embedded package specified"
fi

echo "Destroying..."
find $OUTPUT_DIR -name "index.html" -mindepth 2 -exec rm {} \;
find $OUTPUT_DIR -type d -empty -depth -exec rmdir {} \;

TARBALL=${DIR}.tar.gz
echo "Compressing to ${TARBALL}..."
tar -czf dist/${TARBALL} $OUTPUT_DIR/

echo "Cleaning up..."
rm -r $OUTPUT_DIR

ls -alR dist/
