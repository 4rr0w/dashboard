##############################
# Special stuff
##############################
generic:
  add: Add
  back: Back
  cancel: Cancel
  clickToShow: "[Show Value]"
  close: Close
  comingSoon: Coming Soon
  create: Create
  created: Created
  customize: Customize
  disabled: Disabled
  enabled: Enabled
  labelsAndAnnotations: Labels and Annotations
  na: n/a
  name: Name
  readFromFile: Read from File
  remove: Remove
  resource: |-
    {count, plural,
    one  {resource}
    other {resources}
    }
  save: Save
  type: Type
  unknown: Unknown

locale:
  en-us: English
  none: (None)

nav:
  title: Dashboard
  backToRancher: Cluster Manager
  shell: Shell
  group:
    cluster: Cluster
    inUse: More Resources
    rbac: RBAC
    serviceDiscovery: Service Discovery
    starred: Starred
    storage: Storage
    workload: Workload
  ns:
    all: All Namespaces
    clusterLevel: Only Cluster Resources
    namespace: "{name}"
    namespaced: Only Namespaced Resources
    orphan: Not in a Project
    project: "Project: {name}"
    system: Only System Namespaces
    user: Only User Namespaces

product:
  apps: Apps & Marketplace
  ecm: Cluster Manager
  explorer: Cluster Explorer
  gatekeeper: OPA Gatekeeper
  istio: Istio
  logging: Logging
  rio: Rio

suffix:
  cpus: CPUs
  ib: iB
  seconds: Seconds

##############################
# Components & Pages
##############################
asyncButton:
  default:
    action: Action
    waiting: Waiting
    success: Success
    error: Error
  create:
    action:  'Create'
    waiting: 'Creating&hellip;'
    success: 'Created'
  apply:
    action:  'Apply'
    waiting: 'Applying&hellip;'
    success: 'Applied'
  edit:
    action:  'Save'
    waiting: 'Saving&hellip;'
    success: 'Saved'
  delete:
    action:  'Delete'
    waiting: 'Deleting&hellip;'
    success: 'Deleted'
  continue:
    action:  'Continue'
    waiting: 'Saving&hellip;'
    success: 'Saved'
  done:
    action:  'Done'
    waiting: 'Saving&hellip;'
    success: 'Saved'
  enable:
    action:  'Enable'
    waiting: 'Enabling&hellip;'
    success: 'Enabled'
  download:
    action:  'Download'
    waiting: 'Downloading&hellip;'
    success: 'Saving'
  finish:
    action:  'Finish'
    waiting: 'Finishing&hellip;'
    success: 'Finished'
  install:
    action:  'Install'
    waiting: 'Starting&hellip;'
    success: 'Installing'
  upgrade:
    action:  'Upgrade'
    waiting: 'Starting&hellip;'
    success: 'Upgrading'
  refresh:
    action: ''
    actionIcon:  'refresh'
    waiting: ''
    waitingIcon: 'refresh'
    success: ''
    successIcon: 'checkmark'
    error: ''
    errorIcon:   'error'

catalog:
  repo:
    target:
      label: Target
      git: Git Repository containing Helm chart definitions
      http: http(s) URL to an index generated by Helm
    url:
      label: Index URL
      placeholder: e.g. https://charts.rancher.io
    gitRepo:
      label: Git Repo URL
      placeholder: e.g. https://github.com/rancher/charts.git
    gitBranch:
      label: Git Branch
      placeholder: e.g. dev-v2.5
  charts:
    certified:
      rancher: Rancher
      partner: Partner
      other: Other
    search: Filter
  install:
    header:
      upgrade: Upgrade {name}
      install: Install {name}
      installGeneric: Install Chart
    section:
      readme: README
      chartOptions: Chart Options
      valuesYaml: Values YAML
      helm: Helm Options
    helm:
      atomic: Atomic
      cleanupOnFail: Cleanup on Failure
      crds: Apply custom resource definitions
      dryRun: Dry Run
      force: Force
      historyMax:
        label: Keep last
        unit: revisions
      hooks: Execute chart hooks
      openapi: Validate OpenAPI schema
      resereuseValues: Reuse Values
      resetValues: Reset Values
      timeout:
        label: Timeout
        unit: sec
      wait: Wait

cluster:
  nodeDriver:
    displayName:
      aliyun: Alibaba ACK
      aliyunecs: Aliyun ECS
      amazonec2: Amazon EC2
      amazoneks: Amazon EKS
      azure: Azure
      azureaks: Azure AKS
      baidu: Baidu CCE
      cloudca: Cloud.ca
      digitalocean: DigitalOcean
      exoscale: Exoscale
      googlegke: Google GKE
      huaweicce: Huawei CCE
      linode: Linode
      oci: Oracle Cloud Infrastructure
      openstack: OpenStack
      oracleoke: Oracle OKE
      otc: Open Telekom Cloud
      packet: Packet
      pinganyunecs: Pinganyun ECS
      rackspace: RackSpace
      rancherkubernetesengine: RKE
      softlayer: SoftLayer
      tencenttke: Tencent TKE
      upcloud: UpCloud
      vmwarevsphere: vSphere
      zstack: ZStack
  provider:
    aliyunengine:
      label: Aliyun Kubernetes Container Service
      shortLabel: Alibaba ACK
    amazonelasticcontainerservice:
      label: Amazon Elastic Container Service for Kubernetes
      shortLabel: Amazon EKS
    azurekubernetesservice:
      label: Azure Container Service
      shortLabel: Azure AKS
    custom:
      label: From existing nodes (Custom)
      shortLabel: Custom
    googlekubernetesengine:
      label: Google Kubernetes Engine
      shortLabel: Google GKE
    huaweiengine:
      label: Huawei Cloud Container Engine
      shortLabel: Huawei CCE
    imported:
      label: Import an existing cluster
      shortLabel: Imported
    k3simport:
      label: Rancher K3S
      shortLabel: K3S
    oracleokeengine:
      label: Oracle Container Engine long
      shortLabel: Oracle OKE
    rancherkubernetesengine:
      label: Rancher Kubernetes Engine
      shortLabel: Custom
    tencentengine:
      label: Tencent Kubernetes Engine
      shortLabel: Tencent TKE

clusterIndexPage:
  hardwareResourceGauge:
    consumption: "{useful} of {total} {units} {suffix}"
    coresReserved: Cores Reserved
    coresUsed: Cores Used
    podsReserved: Pods Reserved
    ramReserved: Memory Reserved
    ramUsed: Memory Used
  header: Overview
  resourceGauge:
    totalResources: Total Resources
  sections:
    events:
      label: Events
    gatekeeper:
      buttonText: Configure Gatekeeper
      disabled: OPA Gatekeeper is not configured.
      label: OPA Gatekeeper Constraint Violations
      noRows: There are no contraints with violations to show.
    nodes:
      label: Unhealthy Nodes
      noRows: There are no unhealthy nodes to show.

configmap:
  tabs:
    data:
      label: Data
      protip: Use this area for anything that's UTF-8 text data
    binaryData:
      label: Binary Data

containerResourceLimit:
  cpuPlaceholder: e.g. 1000
  helpText: Configure how much of the resources the container can consume by default.
  helpTextDetail: The amount of resources the container can consume by default.
  label: Container Default Resource Limit
  limitsCpu: CPU Limit
  limitsMemory: Memory Limit
  memPlaceholder: e.g. 128
  requestsCpu: CPU Reservation
  requestsMemory: Memory Reservation

cruResource:
  backBody: Going back will destroy your changes.
  backToForm: Back To Form
  cancelBody: Cancelling will destroy your changes.
  confirmBack: "Yes, Go Back"
  confirmCancel: "Yes, Cancel"
  reviewForm: "No, Review Form"
  reviewYaml: "No, Review Yaml"
  previewYaml: Preview Yaml

footer:
  docs: Docs
  download: Download CLI
  forums: Forums
  issue: File an Issue
  slack: Slack

gatekeeperConstraint:
  enforcementAction:
    title: Enforcement Action
  match:
    title: Match
  parameters:
    addParameter: Add Parameter
    editAsForm: Edit as Form
    editAsYaml: Edit as YAML
    title: Parameters
  tab:
    kinds:
      title: Kinds
    namespaces:
      sub:
        excludedNamespaces: Excluded Namespaces
        namespaces: Namespaces
      title: Namespaces
    selectors:
      sub:
        labelSelector:
          addLabel: Add Label
          title: Label Selector
        namespaceSelector:
          addNamespace: Add Namespace
          title: Namespace Selector
      title: Selectors
  template: Template
  violations:
    title: Violations

gatekeeperIndex:
  unavailable: OPA + Gatekeeper is not available in the system-charts catalog.
  violations: Violations

glance:
  created: Created
  cpu: CPU Usage
  memory: Memory
  nodes:
    total:
      label: |-
        {count, plural,
          =1 { Node }
          other { Total Nodes }
        }
  pods: Pods
  provider: Provider
  version: Kubernetes Version

ingress:
  certificates:
    addCertificate: Add Certificate
    addHost: Add Host
    certificate:
      label: Certificate - Secret Name
    defaultCertLabel: Default Ingress Controller Certificate
    headers:
      certificate: Certificate
      hosts: Hosts
    host:
      label: Host
      placeholder: e.g. example.com
    label: Certificates
    removeHost: Remove
  defaultBackend:
    label: Default Backend
    noServiceSelected: No default backend is configured.
    port:
      label: Port
      placeholder: e.g. 80 or http
    targetService:
      label: Target Service
      doesntExist: The selected service does not exist
    warning: "Warning: Default backend is used globally for the entire cluster."
  rules:
    addPath: Add Path
    addRule: Add Rule
    headers:
      path: Path
      port: Port
      target: Target Service
    hostname: Hostname
    path:
      label: Path
      placeholder: e.g. /foo
    port:
      label: Port
      placeholder: e.g. 80 or http
    removePath: Remove
    requestHost:
      label: Request Host
      placeholder: e.g. example.com
    target:
      label: Target Service
      doesntExist: The selected service does not exist

    title: Rules

internalExternalIP:
  none: None

istio:
  cni: Enabled CNI
  customOverlayFile:
    label: Custom Overlay File
    tip: Provide an IstioOperator yaml with additional components and configuration that is not available with the default installtion.
  egressGateway: Enabled Egress Gateway
  ingressGateway: Enabled Ingress Gateway
  istiodRemote: Enabled istiodRemote
  pilot: Enabled Pilot
  policy: Enabled Policy
  telemetry: Enabled Telemetry
  titles:
    components: Components
    customAnswers: Custom Answers
    advanced: Advanced Settings

logging:
  provider: Provider
  elasticsearch:
    host: Host
    scheme: Scheme
    port: Port
    indexName: Index Name
    user: User
    password: Password
    clientCert:
      label: Client Cert
      placeholder: Paste in the CA certificate
    clientKey:
      label: Client Key
      placeholder: Paste in the client key
    clientKeyPass: Client Key Pass
  kafka:
    brokers: Brokers
    defaultTopic: Default Topic
    saslOverSsl: SASL Over SSL
    scramMechanism: Scram Mechanism
    username: Username
    password: Password
    sslCaCert:
      label: SSL CA Cert
      placeholder: Paste in the CA certificate
    sslClientCert:
      label: SSL Client Cert
      placeholder: Paste in the client cert
    sslClientCertChain:
      label: SSL Client Cert Chain
      placeholder: Paste in the client cert chain
    sslClientCertKey: SSL Client Cert Key
  splunk:
    host: Host
    port: Port
    protocol: Protocol
    index: Index
    token: Token
    clientCert: Client Cert
    clientKey: Client Key
    insecureSsl: Insecure SSL
  syslog:
    address: Address
    cluster: Cluster
    rootCa:
      label: Root CA
      placeholder: Paste in the Root CA

monitoring:
  createDefaultRoles: Create Default Monitoring Cluster Roles
  aggrigateDefaultRoles: Aggregate to Default Kubernetes Roles
  accessModes:
    many: ReadWriteMany
    once: ReadWriteOnce
    readOnlyMany: ReadOnlyMany
  clusterType:
    k3s: 'K3s'
    kubeAdmin: KubeADM
    label: Cluster Type
    managed: 'Managed Cluster (EKS, GKE, AKS, etc.)'
    other: Other
    placeholder: Select cluster type
    rke: RKE
  grafana:
    storage:
      annotations: PVC Annotations
      className: Storage Class Name
      existingClaim: Use Existing Claim
      finalizers: PVC Finalizers
      label: Persistent Storage for Grafana
      mode: Access Mode
      selector: Selector
      size: Size
      subpath: Use Subpath
      type: Persistent Storage Types
      types:
        existing: Enable With Existing PVC
        statefulset: Enable with StatefulSet Template
        template: Enable with PVC Template
      volumeMode: Volume Mode
      volumeName: Volume Name
    title: Grafana Config
  prometheus:
    config:
      adminApi: Admin API
      evaluation: Evaluation Interval
      limits:
        cpu: CPU Limit
        memory: Memory Limit
      requests:
        cpu: Requested CPU
        memory: Requested Memory
      retention: Retention
      retentionSize: Retention Size
      scrape: Scrape Interval
    storage:
      className: Storage Class Name
      label: Persistent Storage for Prometheus
      mode: Access Mode
      selector: Selector
      size: Size
      volumeMode: Volume Mode
      volumeName: Volume Name
    title: Prometheus Config
  volume:
    modes:
      block: Block
      file: Filesystem

namespace:
  containerResourceLimit: Container Resource Limit

node:
  detail:
    detailTop:
      containerRuntime: Container Runtime
      ipAddress: IP Address
      os: OS
      version: Version
    glance:
      consumptionGauge:
        amount: "{used} of {total} {unit} used"
        cpu: CPU
        memory: MEMORY
        pods: PODS
      diskPressure: Disk Pressure
      kubelet: kubelet
      memoryPressure: Memory Pressure
      pidPressure: PID Pressure
    tab:
      address:
        label: Address
        externalIp: ExternalIP
      conditions: Conditions
      images: images
      info: Info
      taints: Taints

persistentVolumeClaim:
  accessModes: Access Modes
  capacity: Capacity
  storageClass: Storage Class
  volumes: Persistent Volumes
  volumeName: Persistent Volume Name
  source: 
    label: Source
    options:
      new: Use a Storage Class to provision a new Persistent Volume
      existing: Use an existing Persistent Volume
prefs:
  title: Preferences
  theme:
    label: Theme
    light: Light
    auto: Auto
    dark: Dark
  landing:
    label: Login Landing Page
    vue: Cluster Explorer
    ember: Cluster Manager
  formatting: Formatting
  dateFormat:
    label: Date Format
  timeFormat:
    label: Time Format
  perPage:
    label: Table Rows per Page
    value: |-
      {count, number}
  keymap:
    label: YAML Editor Key Mapping
    sublime: 'Normal human'
    emacs: 'Emacs'
    vim: 'Vim'
  advanced: Advanced
  dev:
    label: Enable Developer Tools

promptRemove:
  andOthers: |-
    {count, plural,
    =0 {.}
    =1 {, and one other.}
    other {, and {count} others.}
    }
  attemptingToRemove: "You are attemping to remove the {type}"
  protip: "Protip: Hold the {alternateLabel} key while clicking delete to bypass this confirmation"

resourceDetail:
  detailTop:
    annotations: Annotations
    created: Created
    deleted: Deleted
    description: Description
    labels: Labels
    ownerReferences: |-
      {count, plural,
      =1 {Owner}
      other {Owners}}
    showAnnotations: |-
      {annotations, plural,
      =1 {Show annotation}
      other {Show {annotations} annotations}}
  header:
    clone: "Clone from {type}: {name}"
    create: Create
    edit: "Edit {type}: {name}"
    stage: "Stage from {type}: {name}"
    view: "{name}"
  masthead:
    age: Age
    defaultBannerMessage:
      error: This resource is currently in error but there isn't a detailed message available.
      transitioning: This resource is currently transitioning but there isn't a detailed message available.
    namespace: Namespace
    overview: Overview
    project: Project
    yaml: YAML

resourceList:
  head:
    create: Create
    createFromYaml: Create from YAML
    createResource: "Create {resourceName}"

resourceTable:
  groupLabel:
    namespace: "<span>Namespace:</span> {name}"
    notInANamespace: Not Namespaced
    notInAProject: Not in a Project
    project: "<span>Project:</span> {name}"

resourceTabs:
  tabs:
    annotations: Annotations
    labels: Labels

resourceYaml:
  buttons:
    continue: Continue Editing
    diff: Show Diff

rioConfig:
  configure:
    description: Description
    helpText:
      listItem1: The application deployment engine for Kubernetes.
      listItem2: "Rio makes it faster and easier for DevOps to build, test, deploy, scale and version stateless applications"
    requirements:
      header: Requirements
      helpText:
        listItem1: 1 CPU Core
        listItem2: 2 GiB of Memory
  header: Rio
  yaml:
    buttonText: Customize

secret:
  certificate:
    caCertificate: CA Certificate
    cn: Domain Name
    expires: Expires
    issuer: Issuer
    plusMore: "+ {n} more"
    privateKey: Private Key
  data: Data
  registry:
    address: Address
    domainName: Registry Domain Name
    password: Password
    username: Username
  type: Type

servicePorts:
  header:
    label: Port Rules
  rules:
    listening:
      label: Listening Port
      placeholder: e.g. 8080
    name:
      label: Port Name
      placeholder: e.g. myport
    node:
      label: Node Port
      placeholder: e.g. 80
    protocol:
      label: Protocol
    target:
      label: Target Port
      placeholder: e.g. 80 or http

serviceTypes:
  clusterip: Cluster IP
  externalname: External Name
  headless: Headless
  loadbalancer: Load Balancer
  nodeport: Node Port

servicesPage:
  labelsAnnotations:
    label: Labels & Annotations
  affinity:
    actionLabels:
      clusterIp: ClusterIP
      none: There is no session affinity configured.
    helpText: Map connections to a consistent target based on their source IP.
    label: Session Affinity
    timeout:
      label: Session Sticky Time
      placeholder: e.g. 10800
  externalName:
    define: Define External Name
    helpText: "External Name is intended to specify a canonical DNS name. To hardcode an IP address, use a Headless service."
    label: External Name
    placeholder: e.g. my.database.example.com
  ips:
    define: Define Service Ports
    clusterIpHelpText: The Cluster IP address must be within the CIDR range configured for the API server.
    external:
      label: External IPs
      placeholder: e.g. 1.1.1.1
      protip: List of IP addresses for which nodes in the cluster will also accept traffic for this service.
    helpText: "Warning: Configuring additional listener IPs is an advanced use case."
    input:
      label: Cluster IP
      placeholder: e.g. 10.0.171.239
    label: Listener IPs
  selectors:
    helpText: "If no selector is created, manual endpoints must be made."
    label: Selectors
  serviceTypes:
    clusterIp:
      abbrv: IP
      description: Exposes the service on a cluster-internal IP. Choosing this value makes the service only reachable from within the cluster. This is the default type.
      label: Cluster IP
    externalName:
      abbrv: EN
      description: "Maps the service to the contents of the `externalName` field (e.g. foo.bar.example.com), by returning a CNAME record with its value. No proxying of any kind is set up."
      label: External Name
    headless:
      abbrv: H
      description: Neither a cluster IP or load balancer is defined. These are used to interface with other service discovery mechanisms outside of Kubernetes implementation. A cluster IP is not allocated and kube-proxy does not handle these services.
      label: Headless
    loadBalancer:
      abbrv: LB
      description: Exposes the service externally using a cloud provider's load balancer.
      label: Load Balancer
    nodePort:
      abbrv: NP
      description: "Exposes the service on each node's IP at a static port (the `NodePort`). You'll be able to contact this type of service, from outside the cluster, by requesting `<NodeIP>:<NodePort>`."
      label: Node Port
  typeOpts:
    label: Service Type

sortableTable:
  actionAvailability:
    selected: "{actionable} selected"
    some: "Available for {actionable} of the {total} selected"
  noData: There are no rows which match your search query.
  noRows: There are no rows to show.
  paging:
    generic: |-
      {pages, plural,
      =0 {No Items}
      =1 {{count} {count, plural, =1 {Item} other {Items}}}
      other {{from} - {to} of {count} Items}}
    resource: |-
      {pages, plural,
      =0 {No {pluralLabel}}
      =1 {{count} {count, plural, =1 {{singularLabel}} other {{pluralLabel}}}}
      other {{from} - {to} of {count} {pluralLabel}}}

tableHeaders:
  address: Address
  age: Age
  apiGroup: API Groups
  builtIn: Built In
  branch: Branch
  chart: Chart
  clusterCreatorDefault: Cluster Creator Default
  cpu: CPU
  date: Date
  destination: Target
  download: Download
  effect: Effect
  endpoints: Endpoint
  image: Image
  imageSize: Size
  ingressTarget: Target
  internalExternalIp: External/Internal IP
  key: Key
  keys: Data
  lastHeartbeatTime: Last update
  lastUpdated: Last Updated
  matches: Matches
  message: Message
  name: Name
  nameUnlinked: Name
  namespaceName: Name
  namespaceNameUnlinked: Name
  node: Node
  nodeName: Name
  object: Object
  p95: 95%tile
  podImages: Image
  pods: Pods
  ram: RAM
  rbac:
    create: Create
    delete: Delete
    get: Get
    list: List
    patch: Patch
    update: Update
    watch: Watch
  reason: Reason
  reqRate: Req Rate
  resource: Resource
  resources: Resources
  rioImage: Image
  roles: Roles
  scale: Scale
  selector: Selector
  simpleName: Name
  simpleScale: Scale
  simpleType: Type
  state: State
  status: Status
  success: Success
  target: Target
  targetKind: Target Type
  targetPort: Target
  type: Type
  url: URL
  userDisplayName: Display Name
  userId: ID
  userStatus: Status
  username: Username
  value: Value
  version: Version
  weight: Weight

validation:
  arrayLength:
    between: '"{key}" should contain between {min} and {max} {max, plural, =1 {item} other {items}}'
    exactly: '"{key}" should contain {count, plural, =1 {# item} other {# items}}'
    max: '"{key}" should contain at most {count} {count, plural, =1 {item} other {items}}'
    min: '"{key}" should contain at least {count} {count, plural, =1 {item} other {items}}'
  chars: '"{key}" contains {count, plural, =1 {an invalid character} other {# invalid characters}}: {chars}'
  custom:
    missing: "No validtor exists for { validatorName }! Does the validtor exist in custom-validtors? Is the name spelled correctly?"
  dns:
    doubleHyphen: '"{key}" Cannot contain two or more consecutive hyphens'
    hostname:
      empty: '"{key}" must be at least one character'
      emptyLabel: '"{key}" cannot contain two consecutive dots'
      endDot: '"{key}" cannot end with a dot'
      endHyphen: '"{key}" cannot end with a hyphen'
      startDot: '"{key}" cannot start with a dot'
      startHyphen: '"{key}" cannot start with a hyphen'
      startNumber: '"{key}" cannot start with a number'
      tooLong: '"{key}" cannot be longer than {max} characters'
      tooLongLabel: '"{key}" cannot contain a section longer than {max} characters'
    label:
      emptyLabel: '"{key}" cannot be empty'
      endHyphen: '"{key}" cannot end with a hyphen'
      startHyphen: '"{key}" cannot start with a hyphen'
      startNumber: '"{key}" cannot start with a number'
      tooLongLabel: '"{key}" cannot be more than {max} characters'
  k8s:
    identifier:
      emptyLabel: '"{key}" cannot have an empty key'
      emptyPrefix: '"{key}" cannot have an empty prefix'
      endLetter: '"{key}" must end with a letter or number'
      startLetter: '"{key}" must start with a letter or number'
      tooLongKey: '"{key}" cannot have a key longer than {max} characters'
      tooLongPrefix: '"{key}" cannot have a prefix longer than {max} characters'
  noSchema: No schema found to validate
  noType: No type to validate
  number:
    between: '"{key}" should be between {min} and {max}'
    exactly: '"{key}" should be exactly {val}'
    max: '"{key}" should be at most {val}'
    min: '"{key}" should be at least {val}'
  required: '"{key}" is required'
  requiredOrOverride: '"{key}" is required or must allow override'
  service:
    ports:
      name:
        required: "Port Rule [{position}] - Name is required."
      nodePort:
        requriedInt: "Port Rule [{position}] - Node Port must be interger values if included."
      port:
        required: "Port Rule [{position}] - Port is required."
        requriedInt: "Port Rule [{position}] - Port must be interger values if included."
      targetPort:
        between: "Port Rule [{position}] - Target Port must be between 1 and 65535"
        iana: "Port Rule [{position}] - Target Port must be an IANA Service Name or Integer"
        ianaAt: "Port Rule [{position}] - Target Port "
        required: "Port Rule [{position}] - Target Port is required"
  stringLength:
    between: '"{key}" should be between {min} and {max} {max, plural, =1 {character} other {characters}}'
    exactly: '"{key}" should be {count, plural, =1 {# character} other {# characters}}'
    max: '"{key}" should be at most {count} {count, plural, =1 {character} other {characters}}'
    min: '"{key}" should be at least {count} {count, plural, =1 {character} other {characters}}'
  targets:
    missingProjectId: A target must have a project selected.

wizard:
  back: Back
  finish: Finish
  next: Next
  step: "Step {number}:"

wm:
  connection:
    connected: Connected
    connecting: Connecting&hellip;
    disconnected: Disconnected
    error: Error
  containerLogs:
    clear: Clear
    containerName: "Container: {label}"
    download: Download
    follow: Follow
    noData: There are no log entries to show in the current range.
    noMatch: No lines match the current filter.
    previous: Use Previous Container
    range:
      all: Everything
      hours: |-
        {value, number}
        {value, plural,
        =1 {Hour}
        other {Hours}
        }
      label: Show the last
      lines: "{value, number} Lines"
      minutes: |-
        {value, number} {value, plural,
        =1 {Minute}
        other {Minutes}
        }
    search: Filter
    timestamps: Show Timestamps
    wrap: Wrap Lines
  containerShell:
    clear: Clear
    containerName: "Container: {label}"
  kubectlShell:
    title: "Kubectl: {name}"

workload:
  container:
    command:
      addFromResource: Add from Resource
      args: Arguments
      as: as
      command: Entrypoint
      env: Environment Variables
      fromResource:
        key:
          label: Key
          placeholder: e.g. requests.cpu
        prefix: Prefix or Alias
        source:
          label: Source
          placeholder: e.g. my-container
        type: Type
      workingDir: WorkingDir
    healthCheck:
      checkInterval: Check Interval
      command:
        command: Command to run
      failureThreshold: Failure Threshold
      httpGet:
        headers: Request Headers
        path: Request Path
        port: Check Port
      initialDelay: Initial Delay
      livenessProbe: Liveness Probe
      livenessTip: Containers will be restarted when this check is failing.  Not recommended for most uses.
      noHealthCheck: "There is not a Readiness Check, Liveness Check or Startup Check configured."
      readinessProbe: Readiness Probe
      readinessTip: Containers will be removed from service endpoints when this check is failing.  Recommended.
      startupProbe: Startup Probe
      startupTip: Containers will wait until this check succeeds before attempting other health checks.
      successThreshold: Success Threshold
      timeout: Timeout
    image: Container Image
    imagePullPolicy: Image Pull Policy
    name: Container Name
    noResourceLimits: There are no resource requirements configured.
    noPorts: There are no ports configured.
    ports:
      containerPort: Private Container Port
      hostPort: Public Host Port
      name: Name
      protocol: Protocol
    security:
      addCapabilities: Add Capabilities
      addGroupIDs: Add Group IDs
      allowPrivilegeEscalation: Privilege Escalation
      dropCapabilities: Drop Capabilities
      fsGroup: Filesystem Group
      hostIPC: Use Host IPC Namespace
      hostPID: Use Host PID Namespace
      privileged: Privileged
      readOnlyRootFilesystem: Read-Only Root Filesystem
      runAsGroup: Run as Group ID
      runAsNonRoot: Run as Non-Root
      runAsNonRootOptions:
        noOption: "No"
        yesOption: "Yes: containers must run as non-root-user"
      runAsUser: Run as User ID
      shareProcessNamespace: Share single process namespace
      supplementalGroups: Additional Group IDs
      sysctls: Sysctls
      sysctlsKey: Name
    titles:
      container: Define Container
      command: Command
      containers: Containers
      env: Environment Variables
      events: Events
      healthCheck: Health Check
      image: Image
      networking: Networking
      podScheduling: Pod Scheduling
      nodeScheduling: Node Scheduling
      ports: Ports
      resources: Resources
      securityContext: Security Context
      status: Status
  cronSchedule: Schedule
  detailTop:
    node: Node
    podIP: Pod IP
    podRestarts: Pod Restarts
    workload: Workload
  hideTabs: 'Hide Advanced Options'
  job:
    activeDeadlineSeconds:
      label: Active Deadline
      tip: The duration that the job may be active before the system tries to terminate it.
    backOffLimit:
      label: Back Off Limit
      tip: The number of retries before marking this job failed.
    completions:
      label: Completions
      tip: The number of successfully finished pods the job should be run with.
    failedJobsHistoryLimit:
      label: Failed Job History Limit
      tip: The number of failed finished jobs to retain.
    parallelism:
      label: Parallelism
      tip: The maximum number of pods the job should run at any given time.
    successfulJobsHistoryLimit:
      label: Successful Job History Limit
      tip: The number of successful finished jobs to retain.
  networking:
    dnsPolicy:
      label: DNS Policy
      options:
        clusterFirst: Cluster First
        clusterFirstWithHostNet: Cluster First With Host Network
        default: Default
        none: None
      placeholder: Select a Policy...
    hostAliases:
      add: Add Alias
      keyLabel: IP Address
      keyPlaceholder: e.g. 1.1.1.1
      label: Host Aliases
      tip: Additional /etc/hosts entries to be injected in the container.
      valueLabel: Hostname
      valuePlaceholder: "e.g. foo.com, bar.com"
    hostname:
      label: Hostname
      placeholder: e.g. web
    nameservers:
      add: Add Nameserver
      label: DNS Nameservers
      placeholder: e.g. 1.1.1.1
    networkMode:
      label: Network Mode
      options:
        hostNetwork: Host Network
        normal: Normal
      placeholder: Select a Mode...
    dns: DNS Nameservers and Search Domains
    resolver: DNS Resolver Options
    searches:
      add: Add Search Domain
      label: DNS Search Domains
      placeholder: e.g. mycompany.com
    subdomain:
      label: Subdomain
      placeholder: e.g. web
  replicas: Replicas
  showTabs: 'Show Advanced Options'
  scheduling:
    activeDeadlineSeconds: Pod Active Deadline
    activeDeadlineSecondsTip: The duration that the pod may be active before the system tries to mark it failed and kill associated containers.
    affinity:
      addNodeSelector: Add Node Selector
      affinityTitle: Run pods on nodes with pods matching these selectors
      antiAffinityTitle: Run pods on nodes without pods matching these selectors
      matchExpressions:
        addRule: Add Rule
        doesNotExist: Does Not Exist
        exists: Exists
        greaterThan: ">"
        in: =
        inNamespaces: "Pods in these namespaces:"
        key: Key
        lessThan: <
        notIn: ≠
        operator: Operator
        value: Value
        weight: Weight
      noPodRules: There are no pod scheduling rules configured.
      nodeName: Node Name
      preferAny: "Prefer any of:"
      requireAny: "Require any of:"
      schedulingRules: Run pods on node(s) matching these scheduling rules
      specificNode: Run pods on specific node(s)
      thisPodNamespace: This pod's namespace
      topologyKey:
        label: Topology Key
        placeholder: e.g. failure-domain.beta.kubernetes.io/zone
    priority:
      className: Priority Class Name
      priority: Priority
    terminationGracePeriodSeconds: Termination Grace Period
    terminationGracePeriodSecondsTip: The duration that the pod needs to terminate gracefully.
    titles:
      advanced: Advanced
      nodeScheduling: Node Scheduling
      nodeSelector: Nodes with these labels
      podScheduling: Pod Scheduling
      priority: Priority
      tab: Scheduling
      tolerations: Tolerations
    tolerations:
      addToleration: Add Toleration
      effect: Effect
      effectOptions:
        all: All
        noExecute: NoExecute
        noSchedule: "NoSchedule,"
        preferNoSchedule: PreferNoSchedule
      labelKey: Label Key
      operator: Operator
      operatorOptions:
        equal: =
        exists: Exists
      tolerationSeconds: Toleration Seconds
      value: Value
  serviceName: Service Name
  storage:
    subtypes:
      label: Add Volume
      secret: Secret
      configMap: ConfigMap
      hostPath: Bind-Mount
      certificate: Certificate
      persistentVolumeClaim: Persistent Volume Claim
      createPersistentVolumeClaim: Create Persistent Volume Claim 
      csi: Ephemeral Volume
      nfs: NFS
    addMount: Add Mount
    addVolume: Add Volume
    certificate: Certificate
    csi:
      diskName: Disk Name
      diskURI: Disk URI
      cachingMode: 
        label: Caching Mode
        options: 
          none: None
          readOnly: Read Only
          readWrite: Read Write
      kind: 
        label: Kind
        options: 
          dedicated: Dedicated
          managed: Managed
          shared: Shared
      drivers:
        ebs.csi.aws.com: Amazon EBS Disk
        disk.csi.azure.com: Azure Disk
        file.csi.azure.com: Azure File
        pd.csi.storage.gke.io: Google Persistent Disk
        driver.longhorn.io: Longhorn
        csi.vsphere.vmware.com: VMWare vSphere Volume
      fsType: Filesystem Type
      shareName: Share Name
      secretName: Secret Name
      volumeID: Volume ID
      partition: Partition
      pdName: Persistent Disk Name
    defaultMode: Default Mode
    hostPath:
      label: The Path on the Node must be
      options: 
        default: 'Anything: do not check the target path'
        directoryOrCreate: A directory, or create if it doesn't exist
        directory: An existing directory
        fileOrCreate: A file, or create if it doesn't exist
        file: An existing file
        socket: An existing socket
        charDevice: An existing character device
        blockDevice: An existing block device
    mountPoint: Mount Point
    nodePath: Path on Node
    optional:
      label: Optional
      'no': 'No'
      'yes': 'Yes'
    path: Path
    readOnly: Read Only
    server: Server
    storagePolicyID: Storage Policy ID
    storagePolicyName: Storage Policy Name
    subPath: Sub Path in Volume
    title: 'Storage'
    volumeName: Volume Name
    volumePath: Volume Path

  typeDescriptions:
    apps.daemonset: <a href="https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/" target="_blank" rel="noopener nofollow" >DaemonSets</a> run exactly one pod on every eligible node. When new nodes are added to the cluster, DaemonSets automatically deploy to them. Recommended for system-wide or vertically-scalable workloads that never need more than one pod per node.
    apps.deployment: '<a href="https://kubernetes.io/docs/concepts/workloads/controllers/deployment/" target="_blank" rel="noopener nofollow" >Deployments</a> run a scalable number of replicas of a pod distributed among the eligible nodes. Changes are rolled out incrementally and can be rolled back to the previous revision when needed. Recommended for stateless & horizontally-scalable workloads.'
    apps.statefulset: <a href="https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/" target="_blank" rel="noopener nofollow" >StatefulSets</a> manage stateful applications and provide guarantees about the ordering and uniqueness of the pods created. Recommended for workloads with persistent storage or strict identity, quorum, or upgrade order requirements.
    batch.cronjob: <a href="https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/" target="_blank" rel="noopener nofollow" >CronJobs</a> create Jobs, which then run Pods, on a repeating schedule. The schedule is expressed in standard Unix <a href="https://en.wikipedia.org/wiki/Cron" target="_blank" rel="noopener nofollow">cron</a> format, and uses the timezone of the Kubernetes control plane (typically UTC).
    batch.job: <a href="https://kubernetes.io/docs/concepts/workloads/controllers/job/" target="_blank" rel="noopener nofollow" >Jobs</a> create one or more pods to reliably perform a one-time task by running a pod until it exits successfully. Failed pods are automatically replaced until the specified number of completed runs has been reached. Jobs can also run multiple pods in parallel or function as a batch work queue.
  upgrading:
    activeDeadlineSeconds:
      label: Pod Active Deadline
      tip: The duration the pod may be active before the system will try to mark it failed and kill associated containers.
    maxSurge:
      label: Max Surge
      tip: The maximum number of pods allowed beyond the desired scale at any given time.
    maxUnavailable:
      label: Max Unavailable
      tip: The maximum number of pods which can be unavailable at any given time.
    minReadySeconds:
      label: Minimum Ready
      tip: The minimum duration a pod should be ready without containers crashing for it to be considered available.
    partition:
      label: Partition
    progressDeadlineSeconds:
      label: Progress Deadline
      tip: The minimum duration to wait for a deployment to progress before marking it failed.
    revisionHistoryLimit:
      label: Revision History Limit
      tip: The number of old ReplicaSets to retain for rollback.
    strategies:
      labels:
        delete: "On Delete: New pods are only created when old pods are manually deleted."
        recreate: "Recreate: Kill ALL pods, then start new pods."
        rollingUpdate: "Rolling Update: Create new pods, until max surge is reached, before deleting old pods. Don't stop more pods than max unavailable."
    terminationGracePeriodSeconds:
      label: Termination Grace Period
      tip: The duration the pod needs to terminate successfully.
    title: upgrading


##############################
# Model Properties
##############################
model:
  account:
    kind:
      admin: Admin
      agent: Agent
      project: Environment
      registeredAgent: Registered Agent
      service: Service
      user: User
  "catalog.cattle.io.release":
    firstDeployed: First Deployed
    lastDeployed: Last Deployed
  cluster:
    name: Cluster Name
  identity:
    displayType:
      group: Group
      localUser: Local User
      org: Organization
      team: Team
      unknown: "{type}?"
      user: User
  ingress:
    displayKind: L7 Ingress
  machine:
    role:
      controlPlane: Control Plane
      etcd: etcd
      worker: Worker
  openldapconfig:
    domain:
      help: Only users below this base will be used.
      label: User Search Base
      placeholder: "e.g. ou=Users,dc=mycompany,dc=com"
    server:
      label: Hostname or IP Address
    serviceAccountPassword:
      label: Service Account Password
    serviceAccountUsername:
      label: Service Account Username
  projectMember:
    role:
      member: Member
      owner: Owner
      readonly: Read-Only
      restricted: Restricted
  service:
    displayKind:
      generic: Service
      loadBalancer: L4 Balancer

typeLabel:
  catalog.cattle.io.operation: |-
    {count, plural,
      one { Recent Operations }
      other { Recent Operations }
    }
  catalog.cattle.io.release: |-
    {count, plural,
      one { Installed Apps }
      other { Installed Apps }
    }
  catalog.cattle.io.clusterrepo: |-
    {count, plural,
      =-1 { Repositories }
      one { Repository }
      other { Repositories }
    }
  catalog.cattle.io.repo: |-
    {count, plural,
      one { Namespaced Repo }
      other { Namespaced Repos }
    }
  chartInstallAction: |-
    {count, plural,
      one { App }
      other { Apps }
    }
  chartUpgradeAction: |-
    {count, plural,
      one { App }
      other { Apps }
    }
  endpoints: |-
    {count, plural,
      one { Endpoint }
      other { Endpoints }
    }
